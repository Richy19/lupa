class Point {
    var DEBUG = true
    var COUNT = 0

    has x = 0
    has y = 0

    method __init(x, y) {
        print("Point.__init")
        self.x = x
        self.y = y
    }

    method move(x, y) {
        self.x = x
        self.y = y
    }
}

trait Explosive(M) {
    has mesg = M || "KABOOM!"

    method ignite() {
        print("${self} => ${self.mesg}")
    }
}

class Point3D from Point with Explosive {
    has z = 0

    method __init(x, y, z) {
        print("Point3D.__init")
        self.Point.__init(x, y)
        self.z = z
    }

    method move(x, y, z) {
        self.Point.move(x, y)
        self.z = z
    }
}

var p = Point.new()
print(p)
p.move(1,2)
print(p.x, p.y)

var q = Point3D.new()
print(q.x, q.y, q.z)
print(q)
for i=1, 10000000 {
    q.move(i, i+1, i+2)
}
print(q.x, q.y, q.z)
print(Point)
print(q, Point3D)

assert(q.isa(Point), "not isa Point")
assert(q.isa(Point3D), "not isa Point3D")

q.ignite()

