
class Thread {

    has _state

    var llthreads = require('llthreads')

    method __init(func, detach : ?Boolean) {
        var dump = string::dump(func)
        var code =
            "package.path='%{magic::['package']::path}';" ~
            "package.cpath='%{magic::['package']::cpath}';"~
            "require('kula.lang').unit(loadstring(%q))".format(dump)
        self._state = llthreads::new(code)
        self._state.start(detach)
    }

    method join() {
        return self._state.join()
    }
}

var t1 = Thread.new -> {
    for i=1, 10 {
        print("thread 1 - %{i}")
    }
}
var t2 = Thread.new -> {
    for i=1, 10 {
        print("thread 2 - %{i}")
    }
}
t1.join()
t2.join()

